name: 'Deploy MSSQL Server'
run-name: '${{github.actor}} - Deployingto_${{inputs.subscription}}_${{inputs.environment}}'
on:
    workflow_dispatch:
     inputs:
        requesttype:
          type: choice
          required: true
          description: Request Type
          options:
              - Create (with New RG)
              - Create (with Existing RG)
              - Remove 
          default:
              "Create (with New RG)"
        subscription:
          type: string
          required: true
          description: Please enter your subcription Name
        location_pair:
          type: choice
          description: Select Primary-Secondary Location Pair
          required: true
          options:
            - "eastus2-centralus"
            - "centralus-eastus2"
        environment:
          type: choice
          description: choose the environment
          options:
             - dev
             - qa 
             - UAT
             - Prod
        purposeRG:
          type: string
          required: true
          description: Resource Group Purpose.......... Hyphen designate an existing RG
        purpose:
          type: string
          description: purpose/sequence
          required: true
        subnetname:
          type: string
          required: true
          description: Enter the subnet name for db end points
        dbcollation:
          type: string
          required: false
          description: Specify Collation of the database
          default: SQL_Latin1_General_CP1_CI_AS
        skuname:
          type: choice
          description: select SKU_NAME used by Database
          options:
            - S0
            - P2
            - Basic
            - ElasticPool
            - BC_Gen5_2
            - HS_Gen4_1
            - GP_S_Gen5_2
            - DW100c
            - DS100
        zoneredundancy:
          type: choice
          options:
            - "false"
            - "true"
jobs:
  # resource-group:
  #   if: (github.event.inputs.requestType == 'Create (with New RG)')
  #   name: 'Deploying - resource-group'
  #   uses: ./.github/workflows/CreateResourceGroup.yml
  #   secrets:
  #     ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
  #     ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
  #     ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  #     ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  #   with:
  #     name: 'resource-group'
  #     subscription: '${{inputs.subscription}}'
  #     location: '${{ contains(inputs.location_pair, "eastus2-") ? "eastus2" : "centralus" }}'
  #     environment: '${{inputs.environment}}'
  #     purpose: '${{inputs.purposeRG}}'
  mysql-server_new_rg:
    if: (github.event.inputs.requestType == 'Create (with New RG)')
    name: 'Deploying - MSSQL server'
    uses: ./.github/workflows/Createmssqlserver.yml
    needs: resource-group
    secrets: 
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      name: 'mssql'
      subscription: '${{inputs.subscription}}'
      location: '${{ startsWith(inputs.location_pair, "eastus2") && "eastus2" || "centralus" }}'
      secondary_location: '${{ startsWith(inputs.location_pair, "eastus2") && "centralus" || "eastus2" }}'
      purposeRG: '${{inputs.purposeRG}}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purpose}}'
      subnetname: '${{inputs.subnetname}}'
      dbcollation: '${{inputs.dbcollation}}'
      skuname: '${{inputs.skuname}}'
      zoneredundancy: '${{inputs.zoneredundancy}}'
  mysql-server_existing_rg:
    if: (github.event.inputs.requestType == 'Create (with Existing RG)')
    name: 'Deploying - MSSQL server'
    uses: ./.github/workflows/Createmssqlserver.yml
    secrets: 
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      name: 'mssql'
      subscription: '${{inputs.subscription}}'
      purposeRG: '${{inputs.purposeRG}}'
      location: '${{ contains(inputs.location_pair, "eastus2-") ? "eastus2" : "centralus" }}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purpose}}'
      subnetname: '${{inputs.subnetname}}'
      dbcollation: '${{inputs.dbcollation}}'
      skuname: '${{inputs.skuname}}'
      zoneredundancy: '${{inputs.zoneredundancy}}'
  mysql-server_remove:
    if: (github.event.inputs.requestType == 'Remove')
    name: 'Deploying - MSSQL server'
    uses: ./.github/workflows/Createmssqlserver.yml
    secrets: 
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    with:
      name: 'mssql'
      subscription: '${{inputs.subscription}}'
      location: '${{ contains(inputs.location_pair, "eastus2-") ? "eastus2" : "centralus" }}'
      environment: '${{inputs.environment}}'
      purpose: '${{inputs.purpose}}'
      purposeRG: '${{inputs.purposeRG}}'
      subnetname: '${{inputs.subnetname}}'
      dbcollation: '${{inputs.dbcollation}}'
      skuname: '${{inputs.skuname}}'
      zoneredundancy: '${{inputs.zoneredundancy}}'
